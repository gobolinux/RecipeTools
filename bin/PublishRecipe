#!/bin/sh

### Changelog #################################################################

# INSERT_DATE_HERE - [yourname] First version

### Imports ###################################################################

source ScriptFunctions
Import GoboLinux # if you want Verify_Superuser
Import OptionParser
Import String
Import File
Import CVS_Recipe
Import Array


### Options ###################################################################

#scriptDescription="Publish a recipe."
scriptCredits="Copyright (C) INSERT_YEAR_HERE. Released under the GNU GPL."
helpOnNoArguments=yes
scriptUsage="<options> <AppName> <Version|ReleaseTag>"
#scriptExample="-b -e entry_value File1"
#scriptNotes="add notes here if any."
#Add_Option_Boolean "b" "bool" "A boolean option."
Add_Option_Boolean "l" "list" "List available releases"
#Add_Option_Entry "e" "entry" "Specify <entry>." "default_value"
Parse_Options "$@"
shift $parsedArguments

# Use this to parse attributions from
# ${goboSettings}/Scripts/INSERT_NAME_HERE.conf or
# ~/${goboUserSettings}/.Scripts/INSERT_NAME_HERE.conf 

Parse_Conf CVS.conf
Parse_Conf Publish.conf

export CVSROOT="$recipeRepository"

### Operation #################################################################

#Uncomment this if the script is meant to be run with superuser privileges.
#Verify_Superuser

appname="$1"
release="$2"

Setup_Workspace

cd "$workDir"

Update_Recipe_from_CVS $appname

if [ "$in_CVS" = "false" ]
then
    # cleanup
    rmdir $appname
    Die "$appname not in CVS"
fi

cd $appname || Die "Unable to chdir $workDir/$appname"

if Boolean "list" || [ "$release" = "" ]
then
    Log_Normal "Available releases for $appname"
    List_ReleaseTags Recipe | while read releaseTag
    do
        apppair=`ReleaseTag_to_Pair $releaseTag`
	Log_Normal "    $releaseTag: $apppair"
    done
    exit
fi

# Set versionpair and releasetag based on $release
if Starts_With "REL_" "$release"
then
    # $release is a releasetag
    apppair=`ReleaseTag_to_Pair $release`
    releaseTag="$release"
else
    # $release is a versionpair
    apppair="$release"
    releaseTag=`VersionRev_to_ReleaseTag $release`
fi

checkTag=`List_ReleaseTags Recipe | grep $releaseTag`
[ "$checkTag" = "" ] && Die "$releaseTag not a valid tag for $appname"

Log_Normal "Publishing recipe for $appname $apppair ($releaseTag)"

# Checkout tag into tmp dir so we don't disrupt working dir.
tmpDir=`Temporary_Dir`
recDir="$tmpDir/$appname/$apppair"
mkdir -p "$recDir"
cvs -Q co -r "$releaseTag" -d "$recDir" "$recipeModuleBase/$appname"

# Archive
archive="$goboTemp/$appname--$apppair--recipe.tar.bz2"
(cd $tmpDir; tar cf - `find * -type f |grep -v CVS` ) | bzip2 >$archive 

# Call my_publish()
if [ "`type -t my_publish`" = "function" ]
then
    my_publish $archive
else
    Log_Normal "to $archive"
fi

# Clean up
rm -rf $tmpDir


