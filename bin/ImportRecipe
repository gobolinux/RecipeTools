#!/bin/sh

### Changelog #################################################################

# 2005/10/08 - [calica] First version

### Imports ###################################################################

source ScriptFunctions
Import GoboLinux
Import OptionParser
Import String
Import File
Import CVS_Recipe
Import Array

### Options ###################################################################

scriptDescription="Import a recipe into CVS repo"
scriptCredits="Copyright (C) 2005 Released under the GNU GPL."
helpOnNoArguments=yes
scriptUsage="<options> <recipe_tar>"
#scriptExample="-b -e entry_value File1"
#scriptNotes="<recipe> can be directory or tarball"
Add_Option_Boolean "c" "clean" "Clean version string.  Assume revision 0"
Add_Option_Boolean "t" "tag" "Create a Release Tag"
#Add_Option_Entry "e" "entry" "Specify <entry>." "default_value"
#Add_Option_List "l" "list" "Enter a colon-separated list of..." "foo:bar"
Parse_Options "$@"

Parse_Conf CVS.conf 

export CVSROOT="$recipeRepository"
tmpDir=`Temporary_Dir`
### Functions #################################################################

# Extract recipe tarball into temp dir.  Return temp dir base
function extract_recipe {
    Parameters "$@" recipe_tarball
    
    extract_dir="$tmpDir/extract"
    mkdir $extract_dir
    tar -C "$extract_dir" -xjf $recipe_tarball
    echo $extract_dir
}

function tarball_into_cvs {
    Parameters "$@" recipe_tarball

    noext=`basename "$recipe_tarball"`
    for extension in ".gz" ".bz2" ".zip" ".tgz" ".tbz" ".tar"
    do
      noext=`basename "$noext" "$extension"`
    done

    recipename=`Get_Token    "$noext" "--" "0"`
    recipever=`Get_Token "$noext" "--" "1"`    
#    reciperev=`Get_Token "$recipever" "-" "1"`    
#    recipever=`Get_Token "$recipever" "-" "0"`    

    extract_dir=`extract_recipe "$recipe_tarball"`
    Is_Directory "${extract_dir}/${recipename}/${recipever}" || Die "$recipe_tarball not a valid recipe archive"

    # See if we've dealt with this recipe before
    Quiet pushd "$workDir"

    Update_Recipe_from_CVS $recipename
    Is_Directory "$recipename/CVS" || Die "Unable to checkout $recipename"
    cd $recipename || Die "Unable to chdir $workDir/$recipename"
    # $PWD should be "$workDir/$recipename" at this point

    # First import.
    if [ "$in_CVS" = "false" ]
    then
        Log_Normal "$recipename not in CVS: Initial import"
        cd "$workDir"
        cvs -q add "$recipename"
        cd "$recipename"
        touch .version
        cvs -q add .version
    fi

    if [ "$in_CVS" = "true" ]
    then
	Log_Normal "WOW!  Nothing should be in CVS yet!"
	# Check of existing tags
	# List_ReleaseTags is ugly!!!
	String_To_Array tag_array `List_ReleaseTags Recipe`
	# Find most recent tag
	# Compare tag with this version
    fi

    # Copy recipe to recipe workdir ($PWD)
    find * |grep -v CVS >$tmpDir/old_files
    (cd "${extract_dir}/${recipename}/${recipever}"; find * |grep -v CVS >$tmpDir/new_files )
    cp -r "${extract_dir}/${recipename}/${recipever}/." .

    # Clean the version to new format
    Boolean "no-revision" && recipever=`Clean_Version "$recipever"`

    echo "$recipever" > .version

    # Process new/removed files
    diff $tmpDir/old_files $tmpDir/new_files | while read line
    do
	echo $line
	op=`echo $line | cut -d ' ' -f 1`
	opfile=`echo $line | cut -d ' ' -f 2`

	[ "$opfile" = "./.version" ]
	if [ "$op" = "<" ]
        then
	    Log_Normal "Dead file $opfile"
	    rm -f "$opfile"
            cvs -q remove $opfile
	elif [ "$op" = ">" ]
        then
	    Log_Normal "New file $opfile"
            cvs -Q add $opfile
        fi
    done

    # Commit???
    cvs -q commit -R -m "Bulk import $recipename $recipever"
    # Create Release Tag
    if Boolean "tag"
    then
        releaseTag=`VersionRev_to_ReleaseTag "$recipever"`
	while Array_Contains tag_array "$releaseTag"
	do
	    version=`ReleaseTag_to_Version $releaseTag`
	    revision=`ReleaseTag_to_Revision $releaseTag`
	    revision=$[revision+1]
            releaseTag=`VersionRev_to_ReleaseTag "$version" "$revision"`
	done
	Log_Normal "Creating Release Tag $releaseTag"
	cvs tag "$releaseTag"
	[ "$?" = "0" ] || Die "Can't tag $releaseTag"
    fi

    Quiet popd

}

### Operation #################################################################

#Uncomment this if the script is meant to be run with superuser privileges.
#Verify_Superuser

Setup_Workspace

for (( i=1; i<=$(Number_Of_Arguments) ; i++ ))
do
   tarball_into_cvs $(Arg $i)
   : # stuff to do
done
